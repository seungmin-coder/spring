
DROP TABLE MEMBER;
DROP TABLE ITEM;
DROP TABLE BASKET;
DROP TABLE PAYLIST;
DROP TABLE REVIEW;



DROP TABLE REVIEW_REPLY;





DROP TABLE WORKOUT;
DROP TABLE PROGRAM;
DROP TABLE NOTICE;
DROP TABLE QNA;
DROP TABLE CHAT;
DROP TABLE NOTICEBOARD;


DROP SEQUENCE MEMBERSEQ;
DROP SEQUENCE ITEMSEQ;


DROP SEQUENCE REVIEWSEQ;  



DROP SEQUENCE REPLYSEQ;
DROP SEQUENCE REPLYGROUPSEQ;




DROP SEQUENCE WORKOUTSEQ;
DROP SEQUENCE PROGRAMSEQ;
DROP SEQUENCE NOTICESEQ;
DROP SEQUENCE QNASEQ;
DROP SEQUENCE QNAGROUPSEQ;
DROP SEQUENCE CHATSEQ;



CREATE SEQUENCE MEMBERSEQ;				
CREATE SEQUENCE ITEMSEQ;
CREATE SEQUENCE ITEMGROUPSEQ;

CREATE SEQUENCE REVIEWSEQ;

CREATE SEQUENCE REPLYSEQ;     
CREATE SEQUENCE REPLYGROUPSEQ;

CREATE SEQUENCE WORKOUTSEQ;
CREATE SEQUENCE PROGRAMSEQ;
CREATE SEQUENCE NOTICESEQ;
CREATE SEQUENCE QNASEQ;
CREATE SEQUENCE QNAGROUPSEQ;
CREATE SEQUENCE CHATSEQ;


CREATE TABLE MEMBER(
   MB_NO NUMBER,
   MB_ID VARCHAR2(20) NOT NULL,
   MB_PW VARCHAR2(50) NOT NULL,
   MB_NAME VARCHAR2(20) NOT NULL,
   MB_GENDER VARCHAR2(1) NOT NULL,
   MB_EMAIL VARCHAR2(50) NOT NULL,
   MB_ADDR VARCHAR2(200) NOT NULL,
   MB_GRADE VARCHAR2(20) NOT NULL,
   MB_PHOTO VARCHAR2(1000),
   CONSTRAINT MB_NO_PK PRIMARY KEY(MB_NO),
   CONSTRAINT MB_ID_UQ UNIQUE (MB_ID),
   CONSTRAINT MB_GENDER_CH CHECK(MB_GENDER IN ('M','F')),
   CONSTRAINT MB_PHONE_UQ UNIQUE (MB_PHONE)
);
SELECT * FROM MEMBER

ALTER TABLE MEMBER RENAME COLUMN MB_PHONE TO MB_EMAIL
--결제내역
CREATE TABLE PAYLIST(
   MB_NO NUMBER REFERENCES MEMBER (MB_NO),
   ITEM_NO NUMBER REFERENCES ITEM (ITEM_NO),
   PL_COUNT NUMBER NOT NULL,
   PL_DATE DATE NOT NULL,
   CONSTRAINT MB_NO_PK_PAY PRIMARY KEY(MB_NO)
);   
DROP TABLE PAYLIST




CREATE TABLE REVIEW(
   RV_NO NUMBER,
   RV_TITLE VARCHAR2(1000) NOT NULL,
   RV_CONTENT VARCHAR2(4000) NOT NULL,
   RV_DATE DATE NOT NULL,
   RV_PHOTO VARCHAR2(1000) NOT NULL,
   RV_RATE VARCHAR2(10) NOT NULL,
   MB_ID VARCHAR2(20) REFERENCES MEMBER (MB_ID),
   CONSTRAINT RV_NO_PK PRIMARY KEY(RV_NO)
);
SELECT * FROM PAYLIST;



SELECT * FROM REVIEW;





CREATE TABLE REVIEW_REPLY(
   RR_NO NUMBER PRIMARY KEY,
   RV_NO NUMBER NOT NULL,   
   RR_GROUPSEQ NUMBER NOT NULL,
   RR_TAB NUMBER NOT NULL,
   MB_ID VARCHAR2(20) NOT NULL,
   RR_CONTENT VARCHAR2(2000) NOT NULL,
   RR_DATE DATE NOT NULL,   
   
   CONSTRAINT RV_NO_FK_RRY FOREIGN KEY(RV_NO) REFERENCES REVIEW (RV_NO),
   CONSTRAINT MB_ID_FK_RRY FOREIGN KEY(MB_ID) REFERENCES MEMBER (MB_ID)
);

SELECT * FROM REVIEW_REPLY
ORDER BY RV_NO DESC, RR_GROUPSEQ;

INSERT INTO REVIEW_REPLY
VALUES(REPLYSEQ.NEXTVAL,19,REPLYGROUPSEQ.NEXTVAL,4,'son','19번쨰 답글입니다..',SYSDATE);


INSERT INTO REVIEW_REPLY
VALUES(REPLYSEQ.NEXTVAL,2,REPLYGROUPSEQ.NEXTVAL,1,'son','2번에 두번째 답급입니다..',SYSDATE);


DELETE FROM MEMBER WHERE MB_NO = 88;


SELECT * FROM REVIEW_REPLY

DELETE FROM REVIEW_REPLY WHERE RR_NO = 44;
DELETE FROM REVIEW_REPLY WHERE RR_NO = 26;
DELETE FROM REVIEW_REPLY WHERE RR_NO = 33;
DELETE FROM REVIEW_REPLY WHERE RR_NO = 45;
DELETE FROM REVIEW_REPLY WHERE RR_NO = 25;
DELETE FROM REVIEW_REPLY WHERE RR_NO = 29;







CREATE TABLE WORKOUT(
   WK_NO NUMBER,
   WK_NAME VARCHAR2(100) NOT NULL,
   WK_TARGET VARCHAR2(500) NOT NULL,
   CONSTRAINT WK_NO_PK PRIMARY KEY(WK_NO)
);

CREATE TABLE PROGRAM(
   PR_NO NUMBER,
   PR_NAME VARCHAR2(100) NOT NULL,
   WK_NO NUMBER REFERENCES WORKOUT(WK_NO),
   CONSTRAINT PR_NO_PK PRIMARY KEY(PR_NO)
);

CREATE TABLE NOTICE(
   NT_NO NUMBER,
   NT_TITLE VARCHAR2(1000) NOT NULL,
   NT_CONTENT VARCHAR2(4000) NOT NULL,
   NT_DATE DATE NOT NULL,
   CONSTRAINT NT_NO_PK PRIMARY KEY(NT_NO)
);

SELECT * FROM NOTICE

CREATE TABLE QNA(
   QA_NO NUMBER,
   QA_TITLE VARCHAR2(1000) NOT NULL,
   QA_CONTENT VARCHAR2(4000) NOT NULL,
   
   CONSTRAINT QA_NO_PK PRIMARY KEY(QA_NO)
);

CREATE TABLE CHAT(
   CH_NO NUMBER,
   CH_TITLE VARCHAR2(1000) NOT NULL,
   CH_DATE DATE NOT NULL,
   CH_HASH VARCHAR2(500) NOT NULL,
   CH_COUNT NUMBER NOT NULL,
   CONSTRAINT CH_NO_PK PRIMARY KEY(CH_NO)   
); 

--운동 상품
CREATE TABLE ITEM(
   ITEM_NO NUMBER,
   ITEM_GROUPNO NUMBER NOT NULL,
   ITEM_NAME VARCHAR2(100) NOT NULL,
   ITEM_PRICE NUMBER NOT NULL,
   ITEM_STOCK NUMBER NOT NULL,
   ITEM_SALCOUNT NUMBER NOT NULL,
   CONSTRAINT ITEM_NO_PK PRIMARY KEY(ITEM_NO)
);
SELECT * FROM ITEM
DROP TABLE ITEM
--장바구니
CREATE TABLE BASKET(
   MB_NO NUMBER REFERENCES MEMBER (MB_NO),
   ITEM_NO NUMBER REFERENCES ITEM (ITEM_NO),
   BAS_COUNT NUMBER NOT NULL,
   CONSTRAINT MB_NO_PK_BAS PRIMARY KEY(MB_NO)
);

SELECT * FROM ITEM
INSERT INTO ITEM
VALUES(ITEMSEQ.NEXTVAL, 1, '아령(2KG)',20000,100,0)



--최신글부터 출력됨--
SELECT * FROM NOTICE ORDER BY NT_NO DESC;

-------------페이징-------------
----ROWNUM 5까지만 출력
SELECT ROWNUM AS RNUM, NT_NO, NT_TITLE, NT_CONTENT, NT_DATE
FROM
   (SELECT NT_NO, NT_TITLE, NT_CONTENT, NT_DATE
   FROM NOTICE
   ORDER BY NT_NO DESC
   )A
WHERE ROWNUM <=5;

---TOTALCOUNT : 전체 게시물 갯수
SELECT COUNT(NT_NO) AS TOTALCOUNT FROM NOTICE;

--LISTCOUNT : 한페이지에 몇개 보여줄것인지
--TOTALPAGE = TOTALCOUNT / LISTCOUNT

SELECT * FROM MEMBER;

INSERT INTO MEMBER
VALUES(MEMBERSEQ.NEXTVAL, 'mingyeung', '2075wldyd','배민경','F','010-2075-6089','서울시 노원구','관리자',NULL)
